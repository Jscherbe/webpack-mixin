Publishing:
  * npm publish --access public
Tasks:
  ☐ Maybe need the user to provide one additional path (optional) @needs-more-thought
    * relativeBaseDir (name  should be simliary to public path) - The location from the web root (when running in a server like a Drupal site at /themes/custom/mytheme for example)
    * This is going to be used to determine the publicPath
      * Should they just provide the publicPath? Why would the mixin ever need the base directory but not to the assets ie /themes/custom/mytheme vs /themes/custom/mytheme/dist
        * This would force the user to make sure they populate both correctly vs two options and joining within
      * Although you could just have an option for public path or leave it as it currently is but it doesn't help accelerate and user needs to be aware that they need to configure that for dev server HMR stuff
    * I just always need to set public path so
    * Currently put an explanation in the readme
  ✔ Migrate from imagemin-webpack-plugin to image-minimizer-webpack-plugin @done
    * Seems like the package contributors is steering users to this other plugin
    * Options and API is different
    * https://github.com/Klathmon/imagemin-webpack-plugin/issues/116 (issue)
    * https://github.com/webpack-contrib/image-minimizer-webpack-plugin (new plugin)
    ✔ Need to configure @done
    ✔ Decide on practical defaults @done
    ✔ Test @done
      ✔ Images outputting in correct area @done
      ✔ Works for static copied assets @done
      ✔ Images are minimized @done
      ✔ Images are not minimized during development builds @done
  ✔ Add less loader for old project support and migrations @done
  ✔ Add to readme better examples @done
  ✔ Test to make sure image plugins are compressing @done
Questions:
  ✔ Should the modue not include major dependencies so that we can rely on user's version (users preference)? [yes - this should be indenpendent] @unresolved @done
    * webpack, webpack-dev-server, webpack-cli, etc
    * Need to think about this, it's nice for me to include the corresponding version since it aligns with the code in the config and the plugins/loaders being used
    * User has control over their browserlist, and babel.config and can install a different verison of webpack if needed.
    * If we remove it, it increases the setup and understandability, the goal was to make webpack config for simple sites easy

